// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int     @id @default(autoincrement())
  email    String? @unique @db.VarChar(100)
  username String? @unique @db.VarChar(100)
  password String? @db.VarChar(100)

  hub_license_key   String?   @db.VarChar(100)
  token_cache_login String?   @db.VarChar(100)
  session           session[]
  device            device[]
  command           command[]

  created_date DateTime? @default(now()) @db.DateTime(0)
  modify_date  DateTime? @default(now()) @db.DateTime(0)
}

model session {
  id           Int       @id @default(autoincrement())
  created_at   DateTime? @default(now()) @db.DateTime(0)
  updated_at   DateTime? @default(now()) @db.DateTime(0)
  userID       Int?
  accessToken  String?   @db.VarChar(200)
  refreshToken String?   @db.VarChar(200)
  user         user?     @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "session_ibfk_1")

  @@index([userID], map: "userID")
}

model device {
  id            Int       @id @default(autoincrement())
  userID        Int?
  current_state Int?
  device_name   String?   @unique @db.VarChar(200)
  protocol      String?   @db.VarChar(200)
  user          user?     @relation(fields: [userID], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "device_ibfk_1")
  created_at    DateTime? @default(now()) @db.DateTime(0)
  updated_at    DateTime? @default(now()) @db.DateTime(0)

  command command[]

  @@index([userID], map: "userID")
}

model command {
  id         Int       @id @default(autoincrement())
  deviceID   Int?
  userID     Int
  command    String?   @db.VarChar(200)
  sender     String?   @db.VarChar(200)
  receiver   String?   @db.VarChar(200)

  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime? @default(now()) @db.DateTime(0)

  device     device?   @relation(fields: [deviceID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "command_ibfk_1")
  user       user?     @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "command_ibfk_2")

  @@index([deviceID], map: "deviceID")
}
